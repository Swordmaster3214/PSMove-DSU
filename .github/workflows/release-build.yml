name: Build and Release

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset: psmoveapi-4.0.12-linux.tar.gz
          - os: macos-13
            asset: psmoveapi-4.0.12-macos.tar.gz
          - os: windows-latest
            asset: psmoveapi-4.0.12-windows-msvc2017-x64.zip

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libusb-1.0-0-dev libbluetooth-dev pkg-config

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install libusb

      - name: Download psmoveapi (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          curl -L -o psmoveapi.${{ matrix.asset }} \
            https://github.com/thp/psmoveapi/releases/download/4.0.12/${{ matrix.asset }}

      - name: Download psmoveapi (Windows)
        if: runner.os == 'Windows'
        run: |
          curl -L -o psmoveapi.${{ matrix.asset }} https://github.com/thp/psmoveapi/releases/download/4.0.12/${{ matrix.asset }}

      - name: Extract psmoveapi (Linux)
        if: runner.os == 'Linux'
        run: |
          mkdir -p psmoveapi_install
          tar -xzf psmoveapi.${{ matrix.asset }} -C psmoveapi_install --strip-components=1

      - name: Extract psmoveapi (macOS)
        if: runner.os == 'macOS'
        run: |
          mkdir -p psmoveapi_install
          tar -xzf psmoveapi.${{ matrix.asset }} -C psmoveapi_install --strip-components=1

      - name: Extract psmoveapi (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir -p psmoveapi_install
          tar -xf psmoveapi.${{ matrix.asset }} -C psmoveapi_install --strip-components=1

      - name: Configure with CMake
        run: cmake -S . -B build -DPSMOVE_ROOT=${{ github.workspace }}/psmoveapi_install

      - name: Build
        run: cmake --build build --config Release

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/Release/* 
